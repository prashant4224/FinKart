[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1222415641,
              "status": "passed"
            },
            "match": {
              "location": "UserSteps.setUp(Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Create user records",
        "description": "",
        "id": "check-the-user-operations-using-records;create-user-records;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "output": [
              "JSON text ",
              "{\n  \"firstName\": Ravi,\n  \"lastName\": patil,\n  \"address1\": Silver Gardenia,\n  \"city\": Pune\n}"
            ],
            "result": {
              "duration": 367632046,
              "status": "passed"
            },
            "line": 4,
            "name": "User pass \"Ravi\" \"patil\" \"Silver Gardenia\" \"Pune\" data",
            "match": {
              "arguments": [
                {
                  "val": "Ravi",
                  "offset": 11
                },
                {
                  "val": "patil",
                  "offset": 18
                },
                {
                  "val": "Silver Gardenia",
                  "offset": 26
                },
                {
                  "val": "Pune",
                  "offset": 44
                }
              ],
              "location": "UserSteps.user_pass_data(String,String,String,String)"
            },
            "matchedColumns": [
              1,
              2,
              3,
              4
            ],
            "keyword": "Given "
          },
          {
            "output": [
              "Response Json",
              "{\"message\":\"Input data Invalid\",\"ststusCode\":\"001\"}"
            ],
            "result": {
              "duration": 3534825723,
              "status": "passed"
            },
            "line": 5,
            "name": "User calls POST method",
            "match": {
              "location": "UserSteps.user_calls_POST_method()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3645898,
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c400\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.finkart.stepdefinitions.UserSteps.user_gets_response_status(UserSteps.java:81)\r\n\tat ✽.Then user gets response status 200(User.feature:6)\r\n",
              "status": "failed"
            },
            "line": 6,
            "name": "user gets response status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "UserSteps.user_gets_response_status(int)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1584104,
              "status": "passed"
            },
            "match": {
              "location": "UserSteps.setUp(Scenario)"
            }
          }
        ],
        "line": 10,
        "name": "Create user records",
        "description": "",
        "id": "check-the-user-operations-using-records;create-user-records;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "output": [
              "JSON text ",
              "{\n  \"firstName\": Rajeev,\n  \"lastName\": patel,\n  \"address1\": Silver Gardenia,\n  \"city\": Vijayapura\n}"
            ],
            "result": {
              "duration": 468985,
              "status": "passed"
            },
            "line": 4,
            "name": "User pass \"Rajeev\" \"patel\" \"Silver Gardenia\" \"Vijayapura\" data",
            "match": {
              "arguments": [
                {
                  "val": "Rajeev",
                  "offset": 11
                },
                {
                  "val": "patel",
                  "offset": 20
                },
                {
                  "val": "Silver Gardenia",
                  "offset": 28
                },
                {
                  "val": "Vijayapura",
                  "offset": 46
                }
              ],
              "location": "UserSteps.user_pass_data(String,String,String,String)"
            },
            "matchedColumns": [
              1,
              2,
              3,
              4
            ],
            "keyword": "Given "
          },
          {
            "output": [
              "Response Json",
              "{\"message\":\"Input data Invalid\",\"ststusCode\":\"001\"}"
            ],
            "result": {
              "duration": 49412898,
              "status": "passed"
            },
            "line": 5,
            "name": "User calls POST method",
            "match": {
              "location": "UserSteps.user_calls_POST_method()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1046000,
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c400\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.finkart.stepdefinitions.UserSteps.user_gets_response_status(UserSteps.java:81)\r\n\tat ✽.Then user gets response status 200(User.feature:6)\r\n",
              "status": "failed"
            },
            "line": 6,
            "name": "user gets response status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "UserSteps.user_gets_response_status(int)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1578472,
              "status": "passed"
            },
            "match": {
              "location": "UserSteps.setUp(Scenario)"
            }
          }
        ],
        "line": 18,
        "name": "Retrieve user records",
        "description": "",
        "id": "check-the-user-operations-using-records;retrieve-user-records;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "output": [
              "JSON data: ",
              null
            ],
            "result": {
              "duration": 364539,
              "status": "passed"
            },
            "line": 13,
            "name": "User pass data",
            "match": {
              "location": "UserSteps.user_pass_data()"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "Response Json",
              "[{\"id\":1,\"firstName\":\"Rajeev\",\"lastName\":\"patti\",\"address1\":\"Silver Gardenia\",\"city\":\"Belagavi\"},{\"id\":2,\"firstName\":\"Tango\",\"lastName\":\"Raghu\",\"address1\":\"1 st block\",\"city\":\"Bengaluru\"},{\"id\":3,\"firstName\":\"Raj\",\"lastName\":\"patel\",\"address1\":\"Silver Gardenia\",\"city\":\"Vijayapura\"},{\"id\":4,\"firstName\":\"Ravi\",\"lastName\":\"patil\",\"address1\":\"Silver Gardenia\",\"city\":\"Pune\"},{\"id\":5,\"firstName\":\"Manu\",\"lastName\":\"Kurabara\",\"address1\":\"police Gardenia\",\"city\":\"Bjp\"},{\"id\":6,\"firstName\":\"Manu\",\"lastName\":\"Kurabara\",\"address1\":\"police Gardenia\",\"city\":\"Bjp\"},{\"id\":7,\"firstName\":\"Manu\",\"lastName\":\"Kurabara\",\"address1\":\"police Gardenia\",\"city\":\"Bjp\"},{\"id\":8,\"firstName\":\"Manu\",\"lastName\":\"Kurabara\",\"address1\":\"police Gardenia\",\"city\":\"Bjp\"},{\"id\":9,\"firstName\":\"Manu\",\"lastName\":\"Kurabara\",\"address1\":\"police Gardenia\",\"city\":\"Bjp\"}]"
            ],
            "result": {
              "duration": 1113509739,
              "status": "passed"
            },
            "line": 14,
            "name": "User calls GET method",
            "match": {
              "location": "UserSteps.user_calls_GET_method()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 698357,
              "status": "passed"
            },
            "line": 15,
            "name": "user gets response status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "UserSteps.user_gets_response_status(int)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2812374,
              "status": "passed"
            },
            "match": {
              "location": "UserSteps.setUp(Scenario)"
            }
          }
        ],
        "line": 27,
        "name": "Retrieve user records",
        "description": "",
        "id": "check-the-user-operations-using-records;retrieve-user-records;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "output": [
              "JSON data: "
            ],
            "result": {
              "duration": 329723,
              "status": "passed"
            },
            "line": 22,
            "name": "User pass 1 data",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 10
                }
              ],
              "location": "UserSteps.user_pass_data(int)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "output": [
              "Response Json",
              "{\"id\":1,\"firstName\":\"Rajeev\",\"lastName\":\"patti\",\"address1\":\"Silver Gardenia\",\"city\":\"Belagavi\"}"
            ],
            "result": {
              "duration": 161646752,
              "status": "passed"
            },
            "line": 23,
            "name": "User calls GET with 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 20
                }
              ],
              "location": "UserSteps.user_calls_GET_with(int)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 549368,
              "status": "passed"
            },
            "line": 24,
            "name": "user gets response status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "UserSteps.user_gets_response_status(int)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1433067,
              "status": "passed"
            },
            "match": {
              "location": "UserSteps.setUp(Scenario)"
            }
          }
        ],
        "line": 35,
        "name": "Retrieve invalid user records",
        "description": "",
        "id": "check-the-user-operations-using-records;retrieve-invalid-user-records;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "output": [
              "JSON data: ",
              "999"
            ],
            "result": {
              "duration": 458745,
              "status": "passed"
            },
            "line": 30,
            "name": "User pass 999 invalid data",
            "match": {
              "arguments": [
                {
                  "val": "999",
                  "offset": 10
                }
              ],
              "location": "UserSteps.user_pass_invalid_data(int)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "output": [
              "Response Json",
              "{\"message\":\"Input data Invalid\",\"ststusCode\":\"001\"}"
            ],
            "result": {
              "duration": 58356382,
              "status": "passed"
            },
            "line": 31,
            "name": "User calls GET with 999 invalid record",
            "match": {
              "arguments": [
                {
                  "val": "999",
                  "offset": 20
                }
              ],
              "location": "UserSteps.user_calls_GET_with_invalid_record(int)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 694262,
              "status": "passed"
            },
            "line": 32,
            "name": "user gets invalid response status 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 34
                }
              ],
              "location": "UserSteps.user_gets_invalid_response_status(int)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the User operations using records",
    "description": "",
    "id": "check-the-user-operations-using-records",
    "keyword": "Feature",
    "uri": "User.feature"
  }
]